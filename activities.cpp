#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

// ???????????????????????????????????????????????????????
bool compareActivities(const pair<int, int> &a, const pair<int, int> &b) {
    return a.second < b.second; // ???????????????????????????????
}

int maxActivities(int n, int k, vector<pair<int, int>> &activities) {
    // ???????????????????????????????
    sort(activities.begin(), activities.end(), compareActivities);

    // ?????????????????????????????????????????????
    vector<int> rooms(k, 0);
    int count = 0;

    // ???????????????????????
    for (const auto &activity : activities) {
        int start = activity.first;
        int end = activity.second;

        // ??????????????????????????????????????
        for (int i = 0; i < k; ++i) {
            if (rooms[i] <= start) {
                rooms[i] = end; // ???????
                count++; // ??????????????????????????
                break;
            }
        }
    }

    return count;
}

int main() {
    int n, k;
    cin >> n >> k;

    // ?????????????????
    vector<pair<int, int>> activities(n);
    for (int i = 0; i < n; ++i) {
        cin >> activities[i].first >> activities[i].second;
    }

    // ???????????????????
    cout << maxActivities(n, k, activities) << endl;

    return 0;
}
